termfreq_type ="prop")
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0001,
max_termfreq = 0.1,
termfreq_type ="prop")
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0001,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.001,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0005,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0002,
max_termfreq = 0.01,
termfreq_type ="prop")
#dict <- dictionary("C:/Users/jmonn/Documents/GitHub/Personnalite/adjectifs de marque.xlsx")
dict_brut <- readxl::read_excel("C:/Users/jmonn/Documents/GitHub/Personnalite/adjectifs de marque.xlsx")
vect_cat <- as.factor(dict_brut$`Facteur Ocean`)
vect_cat <- levels(vect_cat)
dict_net <- c()
for (val in vect_cat) {
foo <- dict_brut%>%filter(`Facteur Ocean`==val)
a <- foo$`Pré-Régex`
dict_net[[val]] <- a
}
dict_net <- dictionary(dict_net)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0004,
max_termfreq = 0.01,
termfreq_type ="prop")
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
#df_trt_annot <- readRDS("df_prez_luxe.rds")
annot_t <- df_trt_annot %>%
filter(upos=="ADJ")
foo <- annot_t%>%mutate(Off_Acc=ifelse(str_detect(lemma,"@.*")==TRUE,"TRUE",
ifelse(str_detect(lemma,"http.*")==TRUE,"TRUE",                                     ifelse(str_detect(lemma,"dio.*")==TRUE,"TRUE",
ifelse(str_detect(lemma,"&.*")==TRUE,"TRUE",
"FALSE")))))
foo <- foo %>%
filter(Off_Acc!="TRUE")
foo <- foo %>%
mutate(ncr = nchar(lemma)) %>%
filter(ncr>2)
mydfm <- dfm(foo$lemma,
tolower = TRUE,
what = "word")
#             groups = foo$Marque)
mydfm@Dimnames$features
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0004,
max_termfreq = 0.01,
termfreq_type ="prop")
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
phi_lda
View(dict_net)
#dict <- dictionary("C:/Users/jmonn/Documents/GitHub/Personnalite/adjectifs de marque.xlsx")
dict_brut <- readxl::read_excel("C:/Users/jmonn/Documents/GitHub/Personnalite/adjectifs de marque.xlsx")
vect_cat <- as.factor(dict_brut$`Facteur Ocean`)
vect_cat <- levels(vect_cat)
dict_net <- c()
for (val in vect_cat) {
foo <- dict_brut%>%filter(`Facteur Ocean`==val)
a <- foo$`Pré-Régex`
dict_net[[val]] <- a
}
dict_net <- dictionary(dict_net)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 0.0001,
beta = 0.0001,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 1,
beta = 1,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = 0,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 1,
beta = 0,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 1,
beta = 1,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 10,
beta = 10,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 0,
beta = 0,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 1,
beta = 1,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 0.0001,
beta = 0.0001,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = 0.1,
beta = 0.1,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
####PACKAGE STORAGE
library(quanteda)
library(dplyr)
library(tm)
library(stringr)
library(udpipe)
library(syuzhet)
library(seededlda)
library(tidyr)
library(tibble)
library(forcats)
library(ggplot2)
library(tidylo)
df_trt <- readRDS("Data_primaires.rds")
table(df_trt$Marque)
df_ind <- df_trt %>%
filter(Marque%in%vect_dior) %>%
select(status_id,screen_name,text,Marque)
table(df_trt$Marque)
vect_prez <- c("Peugeot","Chanel","Dior","Renault","Sephora")
####PACKAGE STORAGE
library(quanteda)
library(tm)
library(BiocManager)
BiocManager::install("Biobase")
library(Biobase)
library(NMF)
library(udpipe)
library(syuzhet)
df_trt <- readRDS("Data_primaires.rds")
table(df_trt$Marque)
View(df_trt)
df_trt <- readRDS("Data_primaires.rds")
table(df_trt$Marque)
df_ind <- df_trt %>%
filter(Marque%in%vect_prez) %>%
select(status_id,screen_name,text,Marque)
#vect_prez <- c("Givenchy","Chanel","Dior","Cartier","LouisVuitton")
vect_ <- "Michelin"
####PACKAGE STORAGE
library(quanteda)
library(dplyr)
library(tm)
library(stringr)
library(udpipe)
library(syuzhet)
library(seededlda)
library(tidyr)
library(tibble)
library(forcats)
library(ggplot2)
library(tidylo)
df_trt <- readRDS("Data_primaires.rds")
table(df_trt$Marque)
df_ind <- df_trt %>%
filter(Marque%in%vect_) %>%
select(status_id,screen_name,text,Marque)
#udpipe_download_model("french")
udmodel <- udpipe_load_model("french-gsd-ud-2.5-191206.udpipe")
annot_ud <- udpipe_annotate(udmodel,df_ind$text, doc_id = df_ind$status_id)
annot_ud <- as.data.frame(annot_ud)
names(annot_ud)[names(annot_ud) == "doc_id"] <- "status_id"
df_trt_annot <- left_join(annot_ud,df_ind)
saveRDS(df_trt_annot,"df_prez_dior.rds")
#df_trt_annot <- readRDS("df_prez_luxe.rds")
annot_t <- df_trt_annot %>%
filter(upos=="ADJ")
foo <- annot_t%>%mutate(Off_Acc=ifelse(str_detect(lemma,"@.*")==TRUE,"TRUE",
ifelse(str_detect(lemma,"http.*")==TRUE,"TRUE",                                     ifelse(str_detect(lemma,"michel*")==TRUE,"TRUE",
ifelse(str_detect(lemma,"&.*")==TRUE,"TRUE",
"FALSE")))))
foo <- foo %>%
filter(Off_Acc!="TRUE")
foo <- foo %>%
mutate(ncr = nchar(lemma)) %>%
filter(ncr>2)
mydfm <- dfm(foo$lemma,
tolower = TRUE,
what = "word")
#             groups = foo$Marque)
mydfm@Dimnames$features
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0004,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.004,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0001,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim
mydfm.un.trim <-
dfm_trim(
mydfm,
min_termfreq = 0.0003,
max_termfreq = 0.01,
termfreq_type ="prop")
mydfm.un.trim
#dict <- dictionary("C:/Users/jmonn/Documents/GitHub/Personnalite/adjectifs de marque.xlsx")
dict_brut <- readxl::read_excel("C:/Users/jmonn/Documents/GitHub/Personnalite/adjectifs de marque.xlsx")
vect_cat <- as.factor(dict_brut$`Facteur Ocean`)
vect_cat <- levels(vect_cat)
dict_net <- c()
for (val in vect_cat) {
foo <- dict_brut%>%filter(`Facteur Ocean`==val)
a <- foo$`Pré-Régex`
dict_net[[val]] <- a
}
dict_net <- dictionary(dict_net)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
View(phi_lda)
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
residual = TRUE,
min_termfreq=10,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
residual = TRUE,
min_termfreq=10,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
lda <- textmodel_seededlda(
mydfm.un.trim,
dict_net,
valuetype = "regex",
max_iter = 2000,
residual = TRUE,
min_termfreq=2,
alpha = NULL,
beta = NULL,
)
phi_lda <- lda$phi %>%
t() %>%
as.data.frame()
terms(lda)
topics(lda)
terms(lda)
#vect_prez <- c("Givenchy","Chanel","Dior","Cartier","LouisVuitton")
vect_dior <- "Dior"
####PACKAGE STORAGE
library(quanteda)
library(dplyr)
library(tm)
library(stringr)
library(udpipe)
library(syuzhet)
library(seededlda)
library(tidyr)
library(tibble)
library(forcats)
library(ggplot2)
library(tidylo)
df_trt <- readRDS("Data_primaires.rds")
table(df_trt$Marque)
df_ind <- df_trt %>%
filter(Marque%in%vect_dior) %>%
select(status_id,screen_name,text,Marque)
View(df_ind)
viz <- df_ind$text %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
library(tidytext)
#nettoyage du text avec tm
viz <- df_ind$text %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
#nettoyage du text avec tm
viz <- df_ind %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
ggplot(tidytext[1:25,], aes(reorder(word, n), n)) +
geom_bar(stat = "identity", fill = "#E3693E") +
geom_text(aes(label= as.character(n)), check_overlap = TRUE, size = 4) +
coord_flip() +
xlab(" ") +
ylab("Volume") +
labs(title = "25 mots les plus récurrents avec le package tidytext",
caption = capt) +
tkrtheme
viz
#nettoyage du text avec tm
viz <- df_ind %>%
unnest_tokens(word, text) %>%
anti_join(stop_words) %>%
count(word, sort = TRUE)
ggplot(viz[1:25,], aes(reorder(word, n), n)) +
geom_bar(stat = "identity", fill = "#E3693E") +
geom_text(aes(label= as.character(n)), check_overlap = TRUE, size = 4) +
coord_flip() +
xlab(" ") +
ylab("Volume") +
labs(title = "25 mots les plus récurrents avec le package tidytext",
caption = capt) +
tkrtheme
View(df_ind)
